{"ast":null,"code":"var _jsxFileName = \"/home/dmbluesmith/DevWork/Learn_React/auth/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const email = emailInputRef.current.value;\n    const password = passInputRef.current.value; // optional: add validation\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC3HPZBxQOyfSxF1FenAPA23ClfT9vli9w';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC3HPZBxQOyfSxF1FenAPA23ClfT9vli9w';\n    }\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          //show error modal\n          let errorMessage = 'Authentication failed!';\n\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message;\n          }\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      console.log(data);\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending Request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"EW5V4BrhtkOpQkuBREh2LZ80xjk=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/home/dmbluesmith/DevWork/Learn_React/auth/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","AuthContext","classes","AuthForm","isLogin","setIsLogin","isLoading","setIsLoading","authCtx","emailInputRef","passInputRef","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","email","current","value","password","url","fetch","method","body","JSON","stringify","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","Error","console","log","catch","err","alert","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const email = emailInputRef.current.value;\n    const password = passInputRef.current.value;\n    \n    // optional: add validation\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC3HPZBxQOyfSxF1FenAPA23ClfT9vli9w';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC3HPZBxQOyfSxF1FenAPA23ClfT9vli9w';\n    }\n\n    fetch(url,\n    {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n  ).then(res => {\n    setIsLoading(false);\n    if (res.ok) {\n      return res.json();\n    } else {\n      return res.json().then(data => {\n        //show error modal\n        let errorMessage = 'Authentication failed!';\n        if (data && data.error && data.error.message) {\n          errorMessage = data.error.message;\n        }\n        throw new Error(errorMessage);\n      });\n    }\n  }).then(data => {\n    console.log(data);\n  }).catch(err => {\n    alert(err.message);\n  });\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef}/>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passInputRef}/>\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading && <p>Sending Request...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}