{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch('https://react-http-739a7-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('problem sending data');\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: \"Sent Cart Data Successfully\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error :(',\n        message: \"Sending Cart Data Failed :(\"\n      }));\n    }\n  };\n};\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const resp = await fetch('https://react-http-739a7-default-rtdb.firebaseio.com/cart.json');\n\n      if (!resp.ok) {\n        throw new Error(\"could not fetch cart data\");\n      }\n\n      const data = await resp.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cart.items || [],\n        totalQuantity: cart.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error :(',\n        message: \"Fetching Cart Data Failed :(\"\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/home/dmbluesmith/DevWork/Learn_React/redux-part-2/src/store/cart-actions.js"],"names":["uiActions","cartActions","sendCartData","cart","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","items","totalQuantity","ok","Error","error","fetchCartData","fetchData","resp","data","json","cartData","replaceCart"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAClC,SAAO,MAAOC,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAACJ,SAAS,CAACK,gBAAV,CAA2B;AAChCC,MAAAA,MAAM,EAAE,SADwB;AAEhCC,MAAAA,KAAK,EAAE,YAFyB;AAGhCC,MAAAA,OAAO,EAAE;AAHuB,KAA3B,CAAD,CAAR;;AAMA,UAAMC,WAAW,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,gEADwB,EAExB;AACIC,QAAAA,MAAM,EAAE,KADZ;AAEIC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,KAAK,EAAEb,IAAI,CAACa,KAAb;AAAoBC,UAAAA,aAAa,EAAEd,IAAI,CAACc;AAAxC,SAAf;AAFV,OAFwB,CAA5B;;AAQA,UAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;AACJ,KAZD;;AAcA,QAAI;AACA,YAAMV,WAAW,EAAjB;AACAL,MAAAA,QAAQ,CAACJ,SAAS,CAACK,gBAAV,CAA2B;AAChCC,QAAAA,MAAM,EAAE,SADwB;AAEhCC,QAAAA,KAAK,EAAE,UAFyB;AAGhCC,QAAAA,OAAO,EAAE;AAHuB,OAA3B,CAAD,CAAR;AAKH,KAPD,CAOE,OAAOY,KAAP,EAAc;AACZhB,MAAAA,QAAQ,CAACJ,SAAS,CAACK,gBAAV,CAA2B;AAChCC,QAAAA,MAAM,EAAE,OADwB;AAEhCC,QAAAA,KAAK,EAAE,UAFyB;AAGhCC,QAAAA,OAAO,EAAE;AAHuB,OAA3B,CAAD,CAAR;AAKH;AAGJ,GArCD;AAsCH,CAvCM;AAyCP,OAAO,MAAMa,aAAa,GAAG,MAAM;AAC/B,SAAO,MAAOjB,QAAP,IAAoB;AACvB,UAAMkB,SAAS,GAAG,YAAY;AAC1B,YAAMC,IAAI,GAAG,MAAMZ,KAAK,CAAC,gEAAD,CAAxB;;AAEA,UAAI,CAACY,IAAI,CAACL,EAAV,EAAc;AACV,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACH;;AAED,YAAMK,IAAI,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAnB;AAEA,aAAOD,IAAP;AACH,KAVD;;AAYA,QAAI;AACA,YAAME,QAAQ,GAAG,MAAMJ,SAAS,EAAhC;AACAlB,MAAAA,QAAQ,CAACH,WAAW,CAAC0B,WAAZ,CAAwB;AAC7BX,QAAAA,KAAK,EAAEb,IAAI,CAACa,KAAL,IAAc,EADQ;AAE7BC,QAAAA,aAAa,EAAEd,IAAI,CAACc;AAFS,OAAxB,CAAD,CAAR;AAIH,KAND,CAME,OAAOG,KAAP,EAAc;AACZhB,MAAAA,QAAQ,CAACJ,SAAS,CAACK,gBAAV,CAA2B;AAChCC,QAAAA,MAAM,EAAE,OADwB;AAEhCC,QAAAA,KAAK,EAAE,UAFyB;AAGhCC,QAAAA,OAAO,EAAE;AAHuB,OAA3B,CAAD,CAAR;AAKH;AACJ,GA1BD;AA2BH,CA5BM","sourcesContent":["import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\nexport const sendCartData = (cart) => {\n    return async (dispatch) => {\n        dispatch(uiActions.showNotification({\n            status: 'pending',\n            title: 'Sending...',\n            message: 'Sending cart data!'\n        }));\n\n        const sendRequest = async () => {\n            const response = await fetch(\n                'https://react-http-739a7-default-rtdb.firebaseio.com/cart.json',\n                {\n                    method: 'PUT',\n                    body: JSON.stringify({items: cart.items, totalQuantity: cart.totalQuantity}),\n                }\n            );\n    \n            if (!response.ok) {\n                throw new Error('problem sending data');\n            }\n        }\n\n        try {\n            await sendRequest();\n            dispatch(uiActions.showNotification({\n                status: 'success',\n                title: 'Success!',\n                message: \"Sent Cart Data Successfully\"\n              }));\n        } catch (error) {\n            dispatch(uiActions.showNotification({\n                status: 'error',\n                title: 'Error :(',\n                message: \"Sending Cart Data Failed :(\"\n              }));\n        }\n\n\n    };\n}\n\nexport const fetchCartData = () => {\n    return async (dispatch) => {\n        const fetchData = async () => {\n            const resp = await fetch('https://react-http-739a7-default-rtdb.firebaseio.com/cart.json');\n\n            if (!resp.ok) {\n                throw new Error(\"could not fetch cart data\");\n            }\n\n            const data = await resp.json();\n\n            return data;\n        }\n\n        try {\n            const cartData = await fetchData();\n            dispatch(cartActions.replaceCart({\n                items: cart.items || [],\n                totalQuantity: cart.totalQuantity,\n            }));\n        } catch (error) {\n            dispatch(uiActions.showNotification({\n                status: 'error',\n                title: 'Error :(',\n                message: \"Fetching Cart Data Failed :(\"\n              }));\n        }\n    };\n}"]},"metadata":{},"sourceType":"module"}