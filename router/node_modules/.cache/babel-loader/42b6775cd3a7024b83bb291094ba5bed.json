{"ast":null,"code":"var _jsxFileName = \"/home/dmbluesmith/DevWork/Learn_React/router/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport { Route, useParams, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const quote = DUMMY.find(quote => quote.id === params.quoteId);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"E9H7ChgX/aZp7/uc7vpIWEBzl8U=\", false, function () {\n  return [useHttp, useRouteMatch, useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/home/dmbluesmith/DevWork/Learn_React/router/src/pages/QuoteDetail.js"],"names":["Fragment","useEffect","Route","useParams","Link","useRouteMatch","Comments","HighlightedQuote","useHttp","getSingleQuote","QuoteDetail","sendRequest","status","data","loadedQuote","error","match","params","quoteId","quote","DUMMY","find","id","text","author","path","url"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,WAA5B;AAAyCC,IAAAA;AAAzC,MAAkDP,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAA/D;AACA,QAAMO,KAAK,GAAGX,aAAa,EAA3B;AACA,QAAMY,MAAM,GAAGd,SAAS,EAAxB;AAEA,QAAM;AAACe,IAAAA;AAAD,MAAYD,MAAlB;AACA,QAAME,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWF,KAAK,IAAIA,KAAK,CAACG,EAAN,KAAaL,MAAM,CAACC,OAAxC,CAAd;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AAACU,IAAAA,WAAW,CAACO,OAAD,CAAX;AAAqB,GAA7B,EAA+B,CAACP,WAAD,EAAcO,OAAd,CAA/B,CAAT;;AAEA,MAAI,CAACC,KAAL,EAAY;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACI,IAA9B;AAAoC,MAAA,MAAM,EAAEJ,KAAK,CAACK;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAER,KAAK,CAACS,IAAK,EAA3B;AAA8B,MAAA,KAAK,MAAnC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAET,KAAK,CAACU,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEV,KAAK,CAACS,IAAK,WAA3B;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA1BD;;GAAMf,W;UACsDF,O,EAC1CH,a,EACCF,S;;;KAHbO,W;AA4BN,eAAeA,WAAf","sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { Route, useParams, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\n\nconst QuoteDetail = () => {\n    const {sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true);\n    const match = useRouteMatch();\n    const params = useParams();\n\n    const {quoteId} = params;\n    const quote = DUMMY.find(quote => quote.id === params.quoteId);\n\n    useEffect(() => {sendRequest(quoteId)}, [sendRequest, quoteId]);\n\n    if (!quote) {\n        return <p>No quote found</p>;\n    }\n    return (\n        <Fragment>\n            <HighlightedQuote text={quote.text} author={quote.author}/>\n            <Route path={`${match.path}`} exact>\n                <div className=\"centered\">\n                    <Link className='btn--flat' to={`${match.url}/comments`}>Load Comments</Link>\n                </div>\n            </Route>\n            <Route path={`${match.path}/comments`}>\n                <Comments/>\n            </Route>\n        </Fragment>\n    );\n};\n\nexport default QuoteDetail;"]},"metadata":{},"sourceType":"module"}