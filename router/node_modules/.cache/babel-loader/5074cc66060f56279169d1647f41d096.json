{"ast":null,"code":"var _jsxFileName = \"/home/dmbluesmith/DevWork/Learn_React/router/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport QuoteList from '../components/quotes/QuoteList';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { useEffect } from 'react';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NotFound from './NotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY = [{\n  id: 'q1',\n  author: 'David',\n  text: 'The Disease'\n}, {\n  id: 'q2',\n  author: 'David J Meyer',\n  text: 'Life or Death'\n}];\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: DUMMY\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllQuotes, \"Sn2QGCbJGjm/GjrACrT5qb4lH3A=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["/home/dmbluesmith/DevWork/Learn_React/router/src/pages/AllQuotes.js"],"names":["QuoteList","useHttp","getAllQuotes","useEffect","LoadingSpinner","NotFound","DUMMY","id","author","text","AllQuotes","sendRequest","status","data","loadedQuotes","error","length"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,KAAK,GAAG,CACV;AAACC,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,MAAM,EAAE,OAAnB;AAA4BC,EAAAA,IAAI,EAAC;AAAjC,CADU,EAEV;AAACF,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,MAAM,EAAE,eAAnB;AAAoCC,EAAAA,IAAI,EAAE;AAA1C,CAFU,CAAd;;AAKA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,YAA5B;AAA0CC,IAAAA;AAA1C,MAAmDd,OAAO,CAACC,YAAD,EAAe,IAAf,CAAhE;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAACQ,IAAAA,WAAW;AAAG,GAAtB,EAAwB,CAACA,WAAD,CAAxB,CAAT;;AAEA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACtB,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,MAAIG,KAAJ,EAAW;AACP,wBACI;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,MAAIH,MAAM,KAAK,WAAX,KAA2B,CAACE,YAAD,IAAiBA,YAAY,CAACE,MAAb,KAAwB,CAApE,CAAJ,EAA4E;AACxE,wBACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AACD,sBACI,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEV;AAAnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA3BD;;GAAMI,S;UACuDT,O;;;KADvDS,S;AA6BN,eAAeA,SAAf","sourcesContent":["import QuoteList from '../components/quotes/QuoteList';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { useEffect } from 'react';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NotFound from './NotFound';\n\nconst DUMMY = [\n    {id: 'q1', author: 'David', text:'The Disease'},\n    {id: 'q2', author: 'David J Meyer', text: 'Life or Death'},\n];\n\nconst AllQuotes = () => {\n    const {sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true);\n\n    useEffect(() => {sendRequest()}, [sendRequest]);\n\n    if (status === 'pending') {\n        return (\n            <div className=\"centered\">\n                <LoadingSpinner/>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <p className='centered focused'>{error}</p>\n        );\n    }\n\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n        return (\n            <NotFound/>\n        );\n    }\n    return (\n        <QuoteList quotes={DUMMY} />\n    );\n};\n\nexport default AllQuotes;"]},"metadata":{},"sourceType":"module"}