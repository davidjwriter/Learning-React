{"ast":null,"code":"var _jsxFileName = \"/home/dmbluesmith/DevWork/Learn_React/forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [nameValid, setNameValid] = useState(false);\n  const [nameTouched, setNameTouched] = useState(false);\n  useEffect(() => {\n    if (nameValid) {\n      console.log(\"Name is Valid!\");\n    }\n  }, [nameValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    if (enteredName.trim() === '') {\n      setNameValid(false);\n    } else {\n      setNameValid(true);\n    }\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setNameValid(false);\n      return;\n    }\n\n    setNameValid(true);\n    console.log(enteredName);\n    console.log(nameInputRef.current.value);\n  };\n\n  const invalid = !nameValid && nameTouched;\n  const namedInputClasses = !invalid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: namedInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), invalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"UZ0v8mS1KKz9L+IVIp6szyvqKjY=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/dmbluesmith/DevWork/Learn_React/forms/src/components/SimpleInput.js"],"names":["useEffect","useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","nameValid","setNameValid","nameTouched","setNameTouched","console","log","nameInputChangeHandler","event","target","value","nameInputBlurHandler","trim","formSubmissionHandler","preventDefault","current","invalid","namedInputClasses"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,cAAP;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,YAAY,GAAGJ,MAAM,EAA3B;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,SAAJ,EAAe;AACbI,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,GAJQ,EAIN,CAACL,SAAD,CAJM,CAAT;;AAMA,QAAMM,sBAAsB,GAAIC,KAAD,IAAW;AACxCR,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAGA,QAAMC,oBAAoB,GAAIH,KAAD,IAAW;AACtC,QAAIT,WAAW,CAACa,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAND;;AAQA,QAAMW,qBAAqB,GAAIL,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACM,cAAN;AACAV,IAAAA,cAAc,CAAC,IAAD,CAAd;;AACA,QAAIL,WAAW,CAACa,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;AACD;;AAEDA,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYR,YAAY,CAACiB,OAAb,CAAqBL,KAAjC;AACD,GAZD;;AAcA,QAAMM,OAAO,GAAG,CAACf,SAAD,IAAcE,WAA9B;AAEA,QAAMc,iBAAiB,GAAG,CAACD,OAAD,GAAW,cAAX,GAA4B,sBAAtD;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEH,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEI,iBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,GAAG,EAAEnB,YADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,QAAQ,EAAES,sBAJZ;AAKE,QAAA,MAAM,EAAEI,oBALV;AAME,QAAA,KAAK,EAAEZ;AANT;AAAA;AAAA;AAAA;AAAA,cAFF,EAUGiB,OAAO,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA5DD;;GAAMpB,W;;KAAAA,W;AA8DN,eAAeA,WAAf","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport '../index.css';\n\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [nameValid, setNameValid] = useState(false);\n  const [nameTouched, setNameTouched] = useState(false);\n\n  useEffect(() => {\n    if (nameValid) {\n      console.log(\"Name is Valid!\");\n    }\n  }, [nameValid]);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = (event) => {\n    if (enteredName.trim() === '') {\n      setNameValid(false);\n    } else {\n      setNameValid(true);\n    }\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setNameTouched(true);\n    if (enteredName.trim() === '') {\n      setNameValid(false);\n      return;\n    }\n\n    setNameValid(true);\n\n    console.log(enteredName);\n    console.log(nameInputRef.current.value);\n  };\n\n  const invalid = !nameValid && nameTouched;\n\n  const namedInputClasses = !invalid ? 'form-control' : 'form-control invalid';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={namedInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          ref={nameInputRef}\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {invalid && <p className=\"error-text\">Name must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}