{"ast":null,"code":"var _jsxFileName = \"/home/dmbluesmith/DevWork/Learn_React/forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [nameTouched, setNameTouched] = useState(false);\n  const [emailTouched, setEmailTouched] = useState(false);\n  const nameInputValid = enteredName.trim() !== '';\n  const emailRegex = '/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i';\n  const emailInputValid = enteredEmail.search(emailRegex) > -1;\n  const nameInvalid = !nameInputValid && nameTouched;\n  const emailInvalid = !emailInputValid && emailTouched;\n  let formIsValid = false;\n\n  if (nameInputValid && emailInputValid) {\n    formIsValid = true;\n  } else {\n    formIsValid = false;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = () => {\n    setNameTouched(true);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = () => {\n    setEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setNameTouched(true);\n    setEmailTouched(true);\n\n    if (!nameInputValid || !emailInputValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredEmail('');\n    setNameTouched(false);\n    setEmailTouched(false);\n  };\n\n  const namedInputClasses = !nameInvalid ? 'form-control' : 'form-control nameInvalid';\n  const emailInputClasses = !emailInvalid ? 'form-control' : 'form-control nameInvalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: namedInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), nameInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), emailInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email is invalid.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"Hi1Fis5+He9qicAWRy1cwEfY4Ew=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/dmbluesmith/DevWork/Learn_React/forms/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredEmail","setEnteredEmail","nameTouched","setNameTouched","emailTouched","setEmailTouched","nameInputValid","trim","emailRegex","emailInputValid","search","nameInvalid","emailInvalid","formIsValid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","emailInputChangeHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","namedInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport '../index.css';\n\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [nameTouched, setNameTouched] = useState(false);\n  const [emailTouched, setEmailTouched] = useState(false);\n\n\n  const nameInputValid = enteredName.trim() !== '';\n\n  const emailRegex =  '/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i';\n  const emailInputValid = enteredEmail.search(emailRegex) > -1;\n\n  const nameInvalid = (!nameInputValid && nameTouched);\n  const emailInvalid = (!emailInputValid && emailTouched);\n\n  let formIsValid = false;\n\n\n  if (nameInputValid && emailInputValid) {\n    formIsValid = true;\n  } else {\n    formIsValid = false;\n  }\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = () => {\n    setNameTouched(true);\n  }\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  }\n\n  const emailInputBlurHandler = () => {\n    setEmailTouched(true);\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setNameTouched(true);\n    setEmailTouched(true);\n    if (!nameInputValid || !emailInputValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredEmail('');\n    setNameTouched(false);\n    setEmailTouched(false);\n  };\n\n\n  const namedInputClasses = !nameInvalid ? 'form-control' : 'form-control nameInvalid';\n  const emailInputClasses = !emailInvalid ? 'form-control' : 'form-control nameInvalid';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={namedInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInvalid && <p className=\"error-text\">Name must not be empty.</p>}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInvalid && <p className=\"error-text\">Email is invalid.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}