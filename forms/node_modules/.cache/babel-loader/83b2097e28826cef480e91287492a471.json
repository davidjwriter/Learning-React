{"ast":null,"code":"var _jsxFileName = \"/home/dmbluesmith/DevWork/Learn_React/forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [nameTouched, setNameTouched] = useState(false);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n\n    if (event.target.value === '') {\n      setNameValid(false);\n    } else {\n      setNameValid(true);\n    }\n  };\n\n  const nameInputBlurHandler = event => {\n    setNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setNameValid(false);\n    } else {\n      setNameValid(true);\n    }\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setNameValid(false);\n      return;\n    }\n\n    setNameValid(true);\n    console.log(enteredName);\n  };\n\n  const invalid = !nameValid && nameTouched;\n  const namedInputClasses = !invalid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: namedInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), invalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"71Ad/sIFRWpG9CI4kBuM4ujbrVo=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/dmbluesmith/DevWork/Learn_React/forms/src/components/SimpleInput.js"],"names":["useEffect","useState","SimpleInput","props","enteredName","setEnteredName","nameTouched","setNameTouched","nameInputChangeHandler","event","target","value","setNameValid","nameInputBlurHandler","trim","formSubmissionHandler","preventDefault","console","log","invalid","nameValid","namedInputClasses"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,cAAP;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;;AAIA,QAAMO,sBAAsB,GAAIC,KAAD,IAAW;AACxCJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;;AACA,QAAIF,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,EAA3B,EAA+B;AAC7BC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAPD;;AAQA,QAAMC,oBAAoB,GAAIJ,KAAD,IAAW;AACtCF,IAAAA,cAAc,CAAC,IAAD,CAAd;;AACA,QAAIH,WAAW,CAACU,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAPD;;AASA,QAAMG,qBAAqB,GAAIN,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACO,cAAN;AACAT,IAAAA,cAAc,CAAC,IAAD,CAAd;;AACA,QAAIH,WAAW,CAACU,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;AACD;;AAEDA,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;AACD,GAXD;;AAaA,QAAMe,OAAO,GAAG,CAACC,SAAD,IAAcd,WAA9B;AAEA,QAAMe,iBAAiB,GAAG,CAACF,OAAD,GAAW,cAAX,GAA4B,sBAAtD;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEJ,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEM,iBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,EAAEb,sBAHZ;AAIE,QAAA,MAAM,EAAEK,oBAJV;AAKE,QAAA,KAAK,EAAET;AALT;AAAA;AAAA;AAAA;AAAA,cAFF,EASGe,OAAO,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA1DD;;GAAMjB,W;;KAAAA,W;AA4DN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport '../index.css';\n\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [nameTouched, setNameTouched] = useState(false);\n\n\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n    if (event.target.value === '') {\n      setNameValid(false);\n    } else {\n      setNameValid(true);\n    }\n  };\n  const nameInputBlurHandler = (event) => {\n    setNameTouched(true);\n    if (enteredName.trim() === '') {\n      setNameValid(false);\n    } else {\n      setNameValid(true);\n    }\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setNameTouched(true);\n    if (enteredName.trim() === '') {\n      setNameValid(false);\n      return;\n    }\n\n    setNameValid(true);\n\n    console.log(enteredName);\n  };\n\n  const invalid = !nameValid && nameTouched;\n\n  const namedInputClasses = !invalid ? 'form-control' : 'form-control invalid';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={namedInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {invalid && <p className=\"error-text\">Name must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}