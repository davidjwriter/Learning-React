{"ast":null,"code":"var _jsxFileName = \"/home/dmbluesmith/DevWork/Learn_React/forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport '../index.css';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: nameInputValid,\n    hasError: nameInvalid,\n    valueChangeHandler: nameInputChangeHandler,\n    inputBlurHandler: nameInputBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: emailInputValid,\n    hasError: emailInvalid,\n    valueChangeHandler: emailInputChangeHandler,\n    inputBlurHandler: emailInputBlurHandler\n  } = useInput(value => value.includes('@') && value.includes('.'));\n  let formIsValid = false;\n\n  if (nameInputValid && emailInputValid) {\n    formIsValid = true;\n  } else {\n    formIsValid = false;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!nameInputValid || !emailInputValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredEmail('');\n    setNameTouched(false);\n    setEmailTouched(false);\n  };\n\n  const namedInputClasses = !nameInvalid ? 'form-control' : 'form-control invalid';\n  const emailInputClasses = !emailInvalid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: namedInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), nameInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), emailInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email is invalid.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"Q07WidAER9YFzZpE1setxEpbOQI=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/dmbluesmith/DevWork/Learn_React/forms/src/components/SimpleInput.js"],"names":["useState","useInput","SimpleInput","props","value","enteredName","isValid","nameInputValid","hasError","nameInvalid","valueChangeHandler","nameInputChangeHandler","inputBlurHandler","nameInputBlurHandler","trim","enteredEmail","emailInputValid","emailInvalid","emailInputChangeHandler","emailInputBlurHandler","includes","formIsValid","formSubmissionHandler","event","preventDefault","setEnteredName","setEnteredEmail","setNameTouched","setEmailTouched","namedInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport '../index.css';\nimport useInput from '../hooks/use-input';\n\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: nameInputValid,\n    hasError: nameInvalid,\n    valueChangeHandler: nameInputChangeHandler,\n    inputBlurHandler: nameInputBlurHandler\n    \n  } = useInput(value => value.trim() !== '');\n\n  const {\n    value: enteredEmail,\n    isValid: emailInputValid,\n    hasError: emailInvalid,\n    valueChangeHandler: emailInputChangeHandler,\n    inputBlurHandler: emailInputBlurHandler\n    \n  } = useInput(value => value.includes('@') && value.includes('.'));\n\n  let formIsValid = false;\n\n\n  if (nameInputValid && emailInputValid) {\n    formIsValid = true;\n  } else {\n    formIsValid = false;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    if (!nameInputValid || !emailInputValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredEmail('');\n    setNameTouched(false);\n    setEmailTouched(false);\n  };\n\n\n  const namedInputClasses = !nameInvalid ? 'form-control' : 'form-control invalid';\n  const emailInputClasses = !emailInvalid ? 'form-control' : 'form-control invalid';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={namedInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInvalid && <p className=\"error-text\">Name must not be empty.</p>}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInvalid && <p className=\"error-text\">Email is invalid.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}