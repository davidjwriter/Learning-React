{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useReducer } from 'react';\nconst init = {\n  value: '',\n  touched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  return init;\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, init);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.touched;\n\n  const valueChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      value: event.target.value\n    });\n  };\n\n  const valueBlurHandler = () => {\n    dispatch({\n      type: 'BLUR'\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: 'RESET'\n    });\n  };\n\n  return {\n    value: eneteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    valueBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"p3bx5yhF83Fm72MvacS5aV+kGjg=\");\n\nexport default useInput;","map":{"version":3,"sources":["/home/dmbluesmith/DevWork/Learn_React/forms/src/hooks/use-input.js"],"names":["useState","useReducer","init","value","touched","inputStateReducer","state","action","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","event","type","target","valueBlurHandler","reset","eneteredValue","isValid"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AAEA,MAAMC,IAAI,GAAI;AACVC,EAAAA,KAAK,EAAE,EADG;AAEVC,EAAAA,OAAO,EAAE;AAFC,CAAd;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,SAAOL,IAAP;AACH,CAFD;;AAIA,MAAMM,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBV,UAAU,CAACI,iBAAD,EAAoBH,IAApB,CAAzC;AAEA,QAAMU,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACP,KAAZ,CAAlC;AACA,QAAMU,QAAQ,GAAG,CAACD,YAAD,IAAiBF,UAAU,CAACN,OAA7C;;AAEA,QAAMU,kBAAkB,GAAIC,KAAD,IAAW;AAClCJ,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE,OAAP;AAAgBb,MAAAA,KAAK,EAAEY,KAAK,CAACE,MAAN,CAAad;AAApC,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMe,gBAAgB,GAAG,MAAM;AAC3BP,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMG,KAAK,GAAG,MAAM;AAChBR,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACH,GAFD;;AAIA,SAAO;AACHb,IAAAA,KAAK,EAAEiB,aADJ;AAEHC,IAAAA,OAAO,EAAET,YAFN;AAGHC,IAAAA,QAHG;AAIHC,IAAAA,kBAJG;AAKHI,IAAAA,gBALG;AAMHC,IAAAA;AANG,GAAP;AAQH,CA1BD;;GAAMX,Q;;AA4BN,eAAeA,QAAf","sourcesContent":["import { useState, useReducer } from 'react';\n\nconst init =  {\n    value: '',\n    touched: false,\n};\n\nconst inputStateReducer = (state, action) => {\n    return init;\n}\n\nconst useInput = (validateValue) => {\n    const [inputState, dispatch] = useReducer(inputStateReducer, init);\n\n    const valueIsValid = validateValue(inputState.value);\n    const hasError = !valueIsValid && inputState.touched;\n\n    const valueChangeHandler = (event) => {\n        dispatch({type: 'INPUT', value: event.target.value});\n    }\n\n    const valueBlurHandler = () => {\n        dispatch({type: 'BLUR'});\n    }\n\n    const reset = () => {\n        dispatch({type: 'RESET'});\n    }\n\n    return {\n        value: eneteredValue,\n        isValid: valueIsValid,\n        hasError,\n        valueChangeHandler,\n        valueBlurHandler,\n        reset\n    };\n};\n\nexport default useInput;"]},"metadata":{},"sourceType":"module"}