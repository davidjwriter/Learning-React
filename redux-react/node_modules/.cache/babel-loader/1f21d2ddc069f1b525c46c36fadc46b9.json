{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter += action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.ShowCounter;\n    }\n\n  }\n}); // Normal Redux\n// const counterReducer = (state = initState, action) => {\n//     if (action.type === \"INCREMENT\") {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter,\n//         };\n//     }\n//     if (action.type === \"INCREASE\") {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter,\n//         }\n//     }\n//     if (action.type === \"DECREMENT\") {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.ShowCounter,\n//         };\n//     }\n//     if (action.type === \"TOGGLE\") {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter,\n//         }\n//     }\n//     return state;\n// }\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.counterActions;\nexport default store;","map":{"version":3,"sources":["/home/dmbluesmith/DevWork/Learn_React/redux-react/src/store/index.js"],"names":["createSlice","configureStore","initState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","ShowCounter","store","reducer","counterActions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAGA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,CADK;AAEdC,EAAAA,WAAW,EAAE;AAFC,CAAlB;AAKA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAF6B;AAG7BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHK;;AAINQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KANK;;AAONS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACP,OAAN,IAAiBU,MAAM,CAACC,OAAxB;AACH,KATK;;AAUNC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACM,WAA3B;AACH;;AAZK;AAHmB,CAAD,CAAhC,C,CAoBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,KAAK,GAAGhB,cAAc,CAAC;AACzBiB,EAAAA,OAAO,EAAEb,YAAY,CAACa;AADG,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGd,YAAY,CAACc,cAApC;AACP,eAAeF,KAAf","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\n\n\nconst initState = {\n    counter: 0,\n    showCounter: true,\n}\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter += action.payload;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.ShowCounter;\n        },\n    }\n\n});\n\n// Normal Redux\n\n// const counterReducer = (state = initState, action) => {\n//     if (action.type === \"INCREMENT\") {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter,\n//         };\n//     }\n\n//     if (action.type === \"INCREASE\") {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter,\n//         }\n//     }\n\n//     if (action.type === \"DECREMENT\") {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.ShowCounter,\n//         };\n//     }\n\n//     if (action.type === \"TOGGLE\") {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter,\n//         }\n//     }\n\n//     return state;\n// }\n\nconst store = configureStore({\n    reducer: counterSlice.reducer\n});\n\nexport const counterActions = counterSlice.counterActions;\nexport default store;"]},"metadata":{},"sourceType":"module"}