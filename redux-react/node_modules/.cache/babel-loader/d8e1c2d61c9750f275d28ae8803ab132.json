{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter += action.amount;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.ShowCounter;\n    }\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"INCREMENT\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"INCREASE\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"DECREMENT\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.ShowCounter\n    };\n  }\n\n  if (action.type === \"TOGGLE\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = configureStore(counterSlice.reducer);\nexport default store;","map":{"version":3,"sources":["/home/dmbluesmith/DevWork/Learn_React/redux-react/src/store/index.js"],"names":["createSlice","configureStore","initState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","amount","toggleCounter","ShowCounter","counterReducer","type","store","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAGA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,CADK;AAEdC,EAAAA,WAAW,EAAE;AAFC,CAAlB;AAKA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAF6B;AAG7BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHK;;AAINQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KANK;;AAONS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACP,OAAN,IAAiBU,MAAM,CAACC,MAAxB;AACH,KATK;;AAUNC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACM,WAA3B;AACH;;AAZK;AAHmB,CAAD,CAAhC;;AAmBA,MAAMC,cAAc,GAAG,YAA+B;AAAA,MAA9BP,KAA8B,uEAAtBR,SAAsB;AAAA,MAAXW,MAAW;;AAClD,MAAIA,MAAM,CAACK,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHf,MAAAA,OAAO,EAAEO,KAAK,CAACP,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAAEM,KAAK,CAACN;AAFhB,KAAP;AAIH;;AAED,MAAIS,MAAM,CAACK,IAAP,KAAgB,UAApB,EAAgC;AAC5B,WAAO;AACHf,MAAAA,OAAO,EAAEO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,MAD7B;AAEHV,MAAAA,WAAW,EAAEM,KAAK,CAACN;AAFhB,KAAP;AAIH;;AAED,MAAIS,MAAM,CAACK,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHf,MAAAA,OAAO,EAAEO,KAAK,CAACP,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAAEM,KAAK,CAACM;AAFhB,KAAP;AAIH;;AAED,MAAIH,MAAM,CAACK,IAAP,KAAgB,QAApB,EAA8B;AAC1B,WAAO;AACHf,MAAAA,OAAO,EAAEO,KAAK,CAACP,OADZ;AAEHC,MAAAA,WAAW,EAAE,CAACM,KAAK,CAACN;AAFjB,KAAP;AAIH;;AAED,SAAOM,KAAP;AACH,CA9BD;;AAgCA,MAAMS,KAAK,GAAGlB,cAAc,CAACI,YAAY,CAACe,OAAd,CAA5B;AAEA,eAAeD,KAAf","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\n\n\nconst initState = {\n    counter: 0,\n    showCounter: true,\n}\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter += action.amount;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.ShowCounter;\n        },\n    }\n\n});\nconst counterReducer = (state = initState, action) => {\n    if (action.type === \"INCREMENT\") {\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter,\n        };\n    }\n\n    if (action.type === \"INCREASE\") {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter,\n        }\n    }\n\n    if (action.type === \"DECREMENT\") {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.ShowCounter,\n        };\n    }\n\n    if (action.type === \"TOGGLE\") {\n        return {\n            counter: state.counter,\n            showCounter: !state.showCounter,\n        }\n    }\n\n    return state;\n}\n\nconst store = configureStore(counterSlice.reducer);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}